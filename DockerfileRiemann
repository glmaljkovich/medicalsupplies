FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env

WORKDIR /app

# Copy csproj and restore as distinct layers
COPY *.csproj ./
RUN dotnet restore

# Copy everything else and build
COPY \
  Configuration \
  Controllers \
  DTOs \
  Entities \
  Exceptions \
  Mappers \
  Migrations \
  Services \
  api.yaml \
  AppSettings.cs \
  appsettings.json \
  ArqNetCore.csproj \
  Program.cs \
  Startup.cs \
  ./
RUN dotnet publish -c Release -o dist
COPY ./api.yaml ./dist/api.yaml

# Build runtime image
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1

RUN apt-get update && apt-get install -y curl ruby ruby-dev ruby-bundler build-essential procps
RUN gem install riemann-tools --no-rdoc --no-ri
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN gem install riemann-tools --no-rdoc --no-ri

ENV NODE_VERSION=12.6.0
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN node --version
RUN npm --version


WORKDIR /app
COPY --from=build-env /app/dist .

WORKDIR /middleware

COPY \
  riemann/middleware/cmd.sh \
  riemann/middleware/index.js \
  riemann/middleware/package.json \
  riemann/middleware/package-lock.json \
  ./

RUN npm install

ENV ASPNETCORE_URLS=http://localhost:81
ENV TARGET_URL=http://localhost:81
ENV PORT=80

cmd ["/middleware/cmd.sh"]